* Flypitch
** Goals
The Flypitch project aims to produce a formal proof of the [[https://en.wikipedia.org/wiki/Continuum_hypothesis#Independence_from_ZFC][independence of the continuum hypothesis]].
** Documentation
A conventional human-readable account of the proof written in type-theoretic foundations, upon which some parts of the formalization will be based, is [[https://www.github.com/flypitch/flypitch-notes/][located here]].
** Compilation
To compile the Flypitch project, you will need [[https://leanprover.github.io/][Lean 3.4.2]]. The ~leanpkg.toml~ file points to a certain commit of ~mathlib~, which will be cloned into the project directory. After cloning the repository to ~flypitch~, navigate to ~flypitch~ and run
#+BEGIN_SRC
leanpkg configure
leanpkg build
#+END_SRC

Installation instructions for Lean (using ~elan~) can be found [[https://github.com/leanprover-community/mathlib/blob/master/docs/elan.md][here]].

** Viewing and navigating the project
To view the project, we recommend the use of a Lean-aware editor like [[https://github.com/leanprover/lean-mode][Emacs]] or [[https://github.com/leanprover/vscode-lean][VSCode]]. Among other things, like type information, such editors can display the /proof state/ inside a tactic block, making it easier to understand how theorems are being proved.

A summary of the main results can be found in ~/src/summary.lean~, containing ~#print~ statements of important definitions and duplicated proofs of the main theorems. From there, one may use their editor's jump-to-definition feature to trace the dependencies of the definitions and proofs.

** Contributors
 - [[https://www.pitt.edu/~jmh288][Jesse Han]]
 - [[http://florisvandoorn.com/][Floris van Doorn]]
 - [[https://github.com/AlmostNever][Andrew Tindall]]

** Manual dependency graph
Files only depend on files on lines above it
#+BEGIN_SRC
to_mathlib pSet_ordinal
bvm fol cohen_poset colimit set_theory
abel bfol bv_prf bvm_extras compactness normal realization regular_open_algebra zfc zfc_expanded
zfc' cantor_space completion language_extension peano zfc_consistent
henkin forcing
completeness
conservative_extension independence reflection
#+END_SRC
